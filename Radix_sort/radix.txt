Radix Sort Algorithm

         Radix sort is a sorting technique that sorts the elements by first grouping the individual digits of the same place value.
Then, sort the elements according to their increasing/decreasing order.


Example:

         170, 45, 75, 90, 802, 24, 2, 66
Sorting by least significant digit (1s place) gives:
     [{170, 90}, {02, 802, 02}, {45, 75}, {66}]
Sorting by the next left digit: 
        [{02, 802, 02}, {45}, {66}, {170, 75}, {90}]
And finally by the leftmost digit:
    [{002, 002, 045, 066, 075, 090}, {170}, {802}]
         
         
Algorithm:


radixSort(array)
  d <- maximum number of digits in the largest element
  create d buckets of size 0-9
  for i <- 0 to d
    sort the elements according to ith place digits using countingSort

countingSort(array, d)
  max <- find largest element among dth place elements
  initialize count array with all zeros
  for j <- 0 to size
    find the total count of each unique digit in dth place of elements and
    store the count at jth index in count array
  for i <- 1 to max
    find the cumulative sum and store it in count array itself
  for j <- size down to 1
    restore the elements to array
    decrease count of each element restored by 1
         
